package AbstractAndInterface;

public class PDMExercise1 {
    /*
    1) 추상 클래스란?
    : 추상클래스는 다른 클래스들의 공통적인 특징을 변수나 매서드로 정의만 해둔것.
    2) 추상클래스와 일반 클래스의 차이점은 무엇인가?
    : abstract를 붙이는것과, 내부에 추상 매서드가 존재한다는 것을 제외하고는 똑같다.
    3) 추상 클래스는 객체 생성이 가능한가?
    : 추상 클래스는 구체적인 내용이 없기때문에 객체 생성이 불가능하다.
    4) 추상 클래스는 어떻게 사용하는가?
    : 추상 클래스를 상속받아서 사용한다. 구체적인 내용이 없어서 자체적으로 사용 불가
    5) 추상 클래스의 역할은 무엇이고 왜 필요한 것인가?
    : 추상클래스에서 선언만 해놓으면서 자식클래스들이 상속받아 이를 구현한다. 그러므로 클래스 상속의 큰 틀이 된다.
      추상클래스를 사용해야 자식클래스에 강제성을 부여할 수 있다. 부모클래스의 메서드를 자식클래스에서 상속 받고,
      오버라이딩 하지 않는 경우를 막기 위해서다.
      즉, 공동개발을 진행할 경우 분업에 도움을 주어 효율적인 일처리를 도와준다.
    6) 추상 클래스는 상속이 가능한가?
    : 일반적인 클래스나 추상 클래스 모두 상속이 가능하다. 단, 일반클래스에 상속했을 경우
      미완성 되어있는 매서드는 반드시 완성해야한다.
    7) 추상 클래스의 추상 메서드는 꼭 오버라이딩하여 사용해야만 하는가?
    : 반드시 오버라이딩 해야한다. 오버라이딩 하지 않을경우 컴파일에러가 발생한다.
    8) 추상 메서드를 포함하고 있다면 추상 클래스여야 하는가?
    : 클래스 단위로만 보면 그렇다. 하지만, 인터페이스 또한 추상 메서드를 포함하고 있다.
    9) 추상 클래스를 만들려면 abstract를 꼭 써야 하는가?
    : 넹.
     */
}
